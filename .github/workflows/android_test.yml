on:
  push:
    branches: [ '*' ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    env:
      api-level: 29
      api-target: default
      api-arch: x86
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: zulu
        cache: gradle
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
    - name: Get AVD Cache
      uses: actions/cache@v3
      id: avd-cache
      with:
        path: |
          ~/.android/avd/*
          ~/.android/adb*
        key: avd-${{ env.api-level }}-${{ matrix.os }}-${{ env.api-target }}-${{ env.api-arch }}
    - name: Create AVD
      if: steps.avd-cache.outputs.cache-hit != 'true'
      env:
        api-package: system-images;android-${{ env.api-level }};${{ env.api-target }};${{ env.api-arch }}
      run: |
        sdkmanager --install '${{ env.api-package }}' > /dev/null
        echo no | avdmanager create avd --force -n test_device --abi 'default/x86' --package '${{ env.api-package }}' --device 'Galaxy Nexus' --sdcard '100M'
    - name: Install dependencies
      run: npm i
    # - name: Build Android Release
    #   timeout-minutes: 80
    #   run: npx detox build --configuration android.att.release
    - name: Start Android Emulator
      timeout-minutes: 10
      run: |
        $ANDROID_SDK_ROOT/emulator/emulator -avd test_device -no-window -gpu swiftshader_indirect -no-accel -noaudio -no-boot-anim -camera-back none &
        adb wait-for-device shell 'echo "Device started."; while [[ -z $(getprop sys.boot_completed) ]]; do echo "Waiting for boot."; sleep 5; done;'
    # - name: Run Detox Tests
    #   timeout-minutes: 5
    #   run: npx detox test --configuration android.att.release --record-videos failing --loglevel verbose
    - name: Stop Emulator
      if: always()
      run: |
        adb devices | grep emulator | cut -f1 | while read line; do adb -s $line emu kill; done
        adb kill-server
    - name: Store Artifacts on Fail
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: detox-artifacts
        path: artifacts

